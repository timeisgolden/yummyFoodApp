{"version":3,"file":"src_app_item-info_item-info_module_ts.js","mappings":"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","sources":["./src/app/item-info/item-info-routing.module.ts","./src/app/item-info/item-info.module.ts","./src/app/item-info/item-info.page.ts","./src/app/item-info/item-info.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ItemInfoPage } from './item-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ItemInfoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ItemInfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ItemInfoPageRoutingModule } from './item-info-routing.module';\n\nimport { ItemInfoPage } from './item-info.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule, \n    ItemInfoPageRoutingModule\n  ],\n  declarations: [ItemInfoPage]\n})\nexport class ItemInfoPageModule {}\n","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Gesture, GestureController, ModalController, NavController } from '@ionic/angular';\nimport { IonSlides } from '@ionic/angular'\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { DataService, Ingredients, Recipe } from '../services/data.service';\nimport { UserService, groceryList } from '../services/user.service';\nimport { PictureGalleryComponent } from '../picture-gallery/picture-gallery.component';\n\n\ninterface CheckboxChangeEventDetail<T = any> {\n  value: T;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'app-item-info',\n  templateUrl: './item-info.page.html',\n  styleUrls: ['./item-info.page.scss'],\n})\nexport class ItemInfoPage implements OnInit, OnDestroy {\n  FavoriteIcon = false;\n  currDiv: string = 'ingredients_list';\n  segment = 0;\n  viewType: string;\n  counter = 0;\n  checkedItemsCount = 0; // Initialize the count to zero\n  swipeGesture: Gesture;\n  recipe: Recipe;\n  groceryList: Ingredients[] = [];\n  @ViewChild('slides', { static: true }) slider: IonSlides;\n  @ViewChild('contentElement', { static: true, read: ElementRef }) contentElement: ElementRef;\n  platform: any;\n\n  constructor(private modalController: ModalController, private data: DataService, private acRoute: ActivatedRoute, private route: Router, public navCtrl: NavController, private gestureController: GestureController, private ref: ChangeDetectorRef, private statusBar: StatusBar, private user: UserService) {\n\n    this.recipe = this.data.getSelectedRecipe();\n\n  }\n\n  ngOnInit() {\n    this.statusBar.styleDefault();\n    this.statusBar.overlaysWebView(true);\n    this.statusBar.backgroundColorByHexString('var(--bg-white)');\n\n  }\n\n\n  ngOnDestroy() {\n    this.swipeGesture.destroy();\n  }\n\n  ionViewDidEnter() {\n    this.swipeGesture = this.gestureController.create({\n      el: this.contentElement.nativeElement,\n      direction: 'y',\n      gestureName: 'swipe',\n      // onStart: (detail) => this.swipeStart(detail),\n      onEnd: (detail) => this.swipeEvent(detail)\n    });\n    this.swipeGesture.enable();\n  }\n\n  swipeEvent(detail) {\n    this.ref.detectChanges();\n    var d = document.getElementById('content-inner');\n    // d.style.top = '350px'; \n    if (detail.velocityX > 0) {\n      d.style.top = '100px';\n    }\n    else if (detail.velocityY > 0) {\n      d.style.top = '350px';\n    }\n    else {\n      d.style.bottom = '0px';\n    }\n  }\n\n  ShowDiv(divVal: string) {\n    this.currDiv = divVal;\n  }\n\n  addGroceries() {\n    if (this.groceryList.length > 0) {\n\n      const groceryList: groceryList = {\n        needed: this.groceryList,\n        recipe: this.recipe,\n\n\n      }\n      this.user.setGrocery(groceryList);\n      this.groceryList = [];\n    }\n\n    this.currDiv = \"ingredients_list\";\n  }\n\n\n\n  async openPictureGallery(pics: string[]) {\n    const modal = await this.modalController.create({\n      component: PictureGalleryComponent,\n      componentProps: { pics },\n    });\n    return await modal.present();\n  }\n\n  // Inside your component class\n  onCheckboxChange(CheckboxChangeEventDetail) {\n\n    const ingredient: Ingredients = {\n      name: CheckboxChangeEventDetail.name,\n      amount: CheckboxChangeEventDetail.amount,\n      icon: CheckboxChangeEventDetail.icon,\n    }\n\n\n    if (CheckboxChangeEventDetail.checked == true) {\n      this.groceryList.push(ingredient);\n    }\n    else {\n      // If the checkbox is unchecked, remove the ingredient from the groceryList\n      this.groceryList = this.groceryList.filter(item => item.name !== ingredient.name);\n\n    }\n\n  }\n\n\n\n  async segmentChanged() {\n    await this.slider.slideTo(this.segment);\n  }\n\n  async slideChanged() {\n    this.segment = await this.slider.getActiveIndex();\n  }\n\n  toggleFavoriteIcon() {\n    this.FavoriteIcon = !this.FavoriteIcon;\n  }\n\n  start_cooking() {\n    this.route.navigate(['./start-cooking']);\n  }\n}\n","export default \"<ion-header class=\\\"bg_transparent\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\" mode=\\\"md\\\">\\n            <ion-back-button text=\\\"\\\" icon=\\\"chevron-back-outline\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <div class=\\\"title-inner d-flex\\\">\\n                <span class=\\\"favorite_icon end\\\" [ngClass]=\\\"FavoriteIcon ? 'active' : ''\\\" (click)=\\\"toggleFavoriteIcon()\\\">\\n                    <ion-icon class=\\\"zmdi zmdi-favorite-outline ion-text-center\\\"></ion-icon>\\n                    <ion-icon class=\\\"zmdi zmdi-favorite ion-text-center\\\"></ion-icon>\\n                </span>\\n            </div>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content #contentElement fullscreen>\\n    <div class=\\\"banner\\\">\\n        <ion-slides pager=\\\"true\\\">\\n            <ion-slide *ngFor=\\\"let pic of recipe.pics\\\">\\n                <div class=\\\"img_box center_img\\\">\\n                    <img src=\\\"{{pic}}\\\" class=\\\"crop_img\\\">\\n                </div>\\n            </ion-slide>\\n        </ion-slides>\\n    </div>\\n\\n    <div id=\\\"content-inner\\\" class=\\\"content-inner\\\">\\n        <div class=\\\"pullup\\\"></div>\\n        <div class=\\\"content_header ion-text-center\\\">\\n            <div class=\\\"text-box\\\">\\n                <h2 class=\\\"animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.35s\\\">{{recipe.name}}</h2>\\n                <h3 class=\\\"d-flex animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.4s\\\">\\n                    {{recipe.ethnicity}}\\n                    <span></span> {{recipe.time}}\\n                    <span></span> {{recipe.servings}} Servings\\n                </h3>\\n            </div>\\n\\n            <ion-segment class=\\\"animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.45s\\\" mode=\\\"ios\\\"\\n                (ionChange)=\\\"segmentChanged()\\\" [(ngModel)]=\\\"segment\\\" lines=\\\"none\\\">\\n                <ion-segment-button mode=\\\"ios\\\" value=\\\"0\\\">\\n                    <ion-label class=\\\"ion-text-center\\\">\\n                        {{'ingredients' | translate}}\\n                    </ion-label>\\n                </ion-segment-button>\\n                <ion-segment-button mode=\\\"ios\\\" value=\\\"1\\\">\\n                    <ion-label class=\\\"ion-text-center\\\">\\n                        {{'direction' | translate}}\\n                    </ion-label>\\n                </ion-segment-button>\\n            </ion-segment>\\n        </div>\\n\\n\\n        <ion-slides #slides (ionSlideDidChange)=\\\"slideChanged()\\\">\\n            <!--            ingredients section start-->\\n            <ion-slide class=\\\"ingredients_list\\\" *ngIf=\\\"currDiv == 'ingredients_list'\\\">\\n                <ion-list lines=\\\"none\\\">\\n                    <!-- <h2> {{'total' | translate}} 8 {{'ingredients' | translate}}</h2> -->\\n                    <ion-item *ngFor=\\\" let ingredient of recipe.ingredients\\\"\\n                        class=\\\"animate__animated animate__fadeInUp\\\">\\n                        <div class=\\\"item-inner d-flex\\\">\\n                            <div class=\\\"img_box\\\">\\n                                <img src=\\\"assets/images/Ingredients/ingredient3.png\\\">\\n                            </div>\\n                            <div class=\\\"text_box\\\">\\n                                <h3 class=\\\"d-flex\\\">\\n                                    {{ingredient.name}}\\n                                    <span class=\\\"end\\\">{{ingredient.amount}}</span>\\n                                </h3>\\n                            </div>\\n                        </div>\\n                    </ion-item>\\n                </ion-list>\\n                <ion-button size=\\\"large\\\" fill=\\\"outline\\\" class=\\\"btn animate__animated animate__fadeInUp wow\\\"\\n                    data-wow-duration=\\\"0.5s\\\" expand=\\\"round\\\" (click)=\\\"ShowDiv('ShoppingList')\\\">{{'add_to_shopping_list' |\\n                    translate}}</ion-button>\\n            </ion-slide>\\n\\n\\n            <ion-slide class=\\\"ShoppingList\\\" *ngIf=\\\"currDiv == 'ShoppingList'\\\">\\n                <ion-list lines=\\\"none\\\">\\n                    <h2 class=\\\"d-flex\\\">{{ '2' | translate }} {{ 'out_of' | translate }} 8 {{ 'ingredient_selected' |\\n                        translate }}\\n                        <span class=\\\"end\\\">{{ 'clear_all' | translate }}</span>\\n                    </h2>\\n                    <ion-item *ngFor=\\\" let ingredient of recipe.ingredients\\\"\\n                        class=\\\"animate__animated animate__fadeInUp\\\">\\n                        <div class=\\\"item-inner d-flex\\\">\\n                            <div class=\\\"img_box\\\">\\n                                <ion-checkbox (ionChange)=\\\"onCheckboxChange(ingredient)\\\"\\n                                    [(ngModel)]=\\\"ingredient.checked\\\"></ion-checkbox>\\n                            </div>\\n                            <div class=\\\"text_box\\\">\\n                                <h3 class=\\\"d-flex\\\">\\n                                    {{ingredient.name}}\\n                                    <span class=\\\"end\\\">{{ingredient.amount}}</span>\\n                                </h3>\\n                            </div>\\n                        </div>\\n                    </ion-item>\\n\\n\\n                </ion-list>\\n                <ion-button *ngIf=\\\"groceryList.length > 0\\\" size=\\\"large\\\"\\n                    class=\\\"btn animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.5s\\\" expand=\\\"round\\\"\\n                    (click)=\\\"addGroceries()\\\">{{'add' | translate}} ( {{groceryList.length}}\\n                    {{'items' |\\n                    translate}})</ion-button>\\n                <ion-button *ngIf=\\\"groceryList.length == 0\\\" size=\\\"large\\\"\\n                    class=\\\"btn animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.5s\\\" expand=\\\"round\\\"\\n                    (click)=\\\"ShowDiv('ingredients_list')\\\">Cancel</ion-button>\\n            </ion-slide>\\n            <!--            ingredients section end-->\\n\\n\\n            <!--            direction section start-->\\n            <ion-slide class=\\\"direction\\\">\\n                <ion-list style=\\\"padding: 1.5rem\\\" lines=\\\"none\\\">\\n                    <h2 class=\\\"dflex\\\">{{recipe.directions.length}} {{'step_cooking_proess' |\\n                        translate}}\\n                        <span class=\\\"end\\\">{{recipe.time}}</span>\\n                    </h2>\\n                    <div class=\\\"animate__animated animate__fadeInUp\\\">\\n                        <div style=\\\"color: gray;\\\" *ngFor=\\\"let direction of recipe.directions; let i = index\\\"\\n                            class=\\\"item-inner\\\">\\n                            <h3>'{{ 'step' | translate }} {{ i + 1 }} / {{ recipe.directions.length }}'\\n                                <!-- <span class=\\\"end\\\">{{ direction.time }}</span> -->\\n                            </h3>\\n                            <p>\\n                                {{ direction.description }}\\n                            </p>\\n                        </div>\\n                    </div>\\n\\n\\n                </ion-list>\\n                <!-- <ion-button size=\\\"large\\\" class=\\\"btn animate__animated animate__fadeInUp wow\\\" data-wow-duration=\\\"0.5s\\\"\\n                    expand=\\\"round\\\" (click)=\\\"start_cooking()\\\">{{'start_cooking' | translate}}</ion-button> -->\\n            </ion-slide>\\n            <!--            direction section end-->\\n        </ion-slides>\\n    </div>\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}