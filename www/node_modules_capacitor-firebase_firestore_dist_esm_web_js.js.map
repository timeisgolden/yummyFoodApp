{"version":3,"file":"node_modules_capacitor-firebase_firestore_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-firebase/firestore/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { addDoc, and, collection, deleteDoc, doc, endAt, endBefore, getDoc, getDocs, getFirestore, limit, limitToLast, onSnapshot, or, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, } from 'firebase/firestore';\nexport class FirebaseFirestoreWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.unsubscribesMap = new Map();\n    }\n    async addDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data } = options;\n        const documentReference = await addDoc(collection(firestore, reference), data);\n        return {\n            reference: {\n                id: documentReference.id,\n                path: documentReference.path,\n            },\n        };\n    }\n    async setDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data, merge } = options;\n        await setDoc(doc(firestore, reference), data, {\n            merge,\n        });\n    }\n    async getDocument(options) {\n        const firestore = getFirestore();\n        const { reference } = options;\n        const documentSnapshot = await getDoc(doc(firestore, reference));\n        const documentSnapshotData = documentSnapshot.data();\n        return {\n            snapshot: {\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: (documentSnapshotData === undefined\n                    ? null\n                    : documentSnapshotData),\n            },\n        };\n    }\n    async updateDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data } = options;\n        await updateDoc(doc(firestore, reference), data);\n    }\n    async deleteDocument(options) {\n        const firestore = getFirestore();\n        const { reference } = options;\n        await deleteDoc(doc(firestore, reference));\n    }\n    async getCollection(options) {\n        const collectionQuery = await this.buildCollectionQuery(options);\n        const collectionSnapshot = await getDocs(collectionQuery);\n        return {\n            snapshots: collectionSnapshot.docs.map(documentSnapshot => ({\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: documentSnapshot.data(),\n            })),\n        };\n    }\n    async getCollectionGroup(options) {\n        const collectionQuery = await this.buildCollectionQuery(options);\n        const collectionSnapshot = await getDocs(collectionQuery);\n        return {\n            snapshots: collectionSnapshot.docs.map(documentSnapshot => ({\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: documentSnapshot.data(),\n            })),\n        };\n    }\n    async enableNetwork() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async disableNetwork() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async addDocumentSnapshotListener(options, callback) {\n        const firestore = getFirestore();\n        const unsubscribe = onSnapshot(doc(firestore, options.reference), snapshot => {\n            const data = snapshot.data();\n            const event = {\n                snapshot: {\n                    id: snapshot.id,\n                    path: snapshot.ref.path,\n                    data: (data === undefined ? null : data),\n                },\n            };\n            callback(event);\n        });\n        const id = Date.now().toString();\n        this.unsubscribesMap.set(id, unsubscribe);\n        return id;\n    }\n    async addCollectionSnapshotListener(options, callback) {\n        const collectionQuery = await this.buildCollectionQuery(options);\n        const unsubscribe = onSnapshot(collectionQuery, snapshot => {\n            const event = {\n                snapshots: snapshot.docs.map(documentSnapshot => ({\n                    id: documentSnapshot.id,\n                    path: documentSnapshot.ref.path,\n                    data: documentSnapshot.data(),\n                })),\n            };\n            callback(event);\n        });\n        const id = Date.now().toString();\n        this.unsubscribesMap.set(id, unsubscribe);\n        return id;\n    }\n    async removeSnapshotListener(options) {\n        const unsubscribe = this.unsubscribesMap.get(options.callbackId);\n        if (!unsubscribe) {\n            return;\n        }\n        unsubscribe();\n        this.unsubscribesMap.delete(options.callbackId);\n    }\n    async removeAllListeners() {\n        this.unsubscribesMap.forEach(unsubscribe => unsubscribe());\n        this.unsubscribesMap.clear();\n    }\n    async buildCollectionQuery(options) {\n        const firestore = getFirestore();\n        let collectionQuery;\n        if (options.compositeFilter) {\n            const compositeFilter = await this.buildFirebaseQueryCompositeFilterConstraint(options.compositeFilter);\n            const queryConstraints = await this.buildFirebaseQueryNonFilterConstraints(options.queryConstraints || []);\n            collectionQuery = query(collection(firestore, options.reference), compositeFilter, ...queryConstraints);\n        }\n        else {\n            const queryConstraints = await this.buildFirebaseQueryConstraints(options.queryConstraints || []);\n            collectionQuery = query(collection(firestore, options.reference), ...queryConstraints);\n        }\n        return collectionQuery;\n    }\n    buildFirebaseQueryCompositeFilterConstraint(compositeFilter) {\n        const queryConstraints = this.buildFirebaseQueryFilterConstraints(compositeFilter.queryConstraints);\n        if (compositeFilter.type === 'and') {\n            return and(...queryConstraints);\n        }\n        else {\n            return or(...queryConstraints);\n        }\n    }\n    buildFirebaseQueryFilterConstraints(queryfilterConstraints) {\n        const firebaseQueryFilterConstraints = [];\n        for (const queryfilterConstraint of queryfilterConstraints) {\n            const firebaseQueryFilterConstraint = this.buildFirebaseQueryFilterConstraint(queryfilterConstraint);\n            firebaseQueryFilterConstraints.push(firebaseQueryFilterConstraint);\n        }\n        return firebaseQueryFilterConstraints;\n    }\n    buildFirebaseQueryFilterConstraint(queryFilterConstraints) {\n        if (queryFilterConstraints.type === 'where') {\n            return this.buildFirebaseQueryFieldFilterConstraint(queryFilterConstraints);\n        }\n        else {\n            return this.buildFirebaseQueryCompositeFilterConstraint(queryFilterConstraints);\n        }\n    }\n    buildFirebaseQueryFieldFilterConstraint(queryfilterConstraints) {\n        return where(queryfilterConstraints.fieldPath, queryfilterConstraints.opStr, queryfilterConstraints.value);\n    }\n    async buildFirebaseQueryNonFilterConstraints(queryConstraints) {\n        const firebaseQueryNonFilterConstraints = [];\n        for (const queryConstraint of queryConstraints) {\n            const firebaseQueryNonFilterConstraint = await this.buildFirebaseQueryNonFilterConstraint(queryConstraint);\n            firebaseQueryNonFilterConstraints.push(firebaseQueryNonFilterConstraint);\n        }\n        return firebaseQueryNonFilterConstraints;\n    }\n    async buildFirebaseQueryNonFilterConstraint(queryConstraints) {\n        switch (queryConstraints.type) {\n            case 'orderBy':\n                return orderBy(queryConstraints.fieldPath, queryConstraints.directionStr);\n            case 'limit':\n                return limit(queryConstraints.limit);\n            case 'limitToLast':\n                return limitToLast(queryConstraints.limit);\n            case 'startAt':\n            case 'startAfter':\n            case 'endAt':\n            case 'endBefore': {\n                const firestore = getFirestore();\n                const documentSnapshot = await getDoc(doc(firestore, queryConstraints.reference));\n                switch (queryConstraints.type) {\n                    case 'startAt':\n                        return startAt(documentSnapshot);\n                    case 'startAfter':\n                        return startAfter(documentSnapshot);\n                    case 'endAt':\n                        return endAt(documentSnapshot);\n                    case 'endBefore':\n                        return endBefore(documentSnapshot);\n                }\n            }\n        }\n    }\n    async buildFirebaseQueryConstraints(queryConstraints) {\n        const firebaseQueryConstraints = [];\n        for (const queryConstraint of queryConstraints) {\n            const firebaseQueryConstraint = await this.buildFirebaseQueryConstraint(queryConstraint);\n            firebaseQueryConstraints.push(firebaseQueryConstraint);\n        }\n        return firebaseQueryConstraints;\n    }\n    async buildFirebaseQueryConstraint(queryConstraint) {\n        if (queryConstraint.type === 'where') {\n            return this.buildFirebaseQueryFieldFilterConstraint(queryConstraint);\n        }\n        else {\n            return await this.buildFirebaseQueryNonFilterConstraint(queryConstraint);\n        }\n    }\n}\n"],"names":["WebPlugin","addDoc","and","collection","deleteDoc","doc","endAt","endBefore","getDoc","getDocs","getFirestore","limit","limitToLast","onSnapshot","or","orderBy","query","setDoc","startAfter","startAt","updateDoc","where","FirebaseFirestoreWeb","constructor","arguments","unsubscribesMap","Map","addDocument","options","firestore","reference","data","documentReference","id","path","setDocument","merge","getDocument","documentSnapshot","documentSnapshotData","snapshot","ref","undefined","updateDocument","deleteDocument","getCollection","collectionQuery","buildCollectionQuery","collectionSnapshot","snapshots","docs","map","getCollectionGroup","enableNetwork","unimplemented","disableNetwork","addDocumentSnapshotListener","callback","unsubscribe","event","Date","now","toString","set","addCollectionSnapshotListener","removeSnapshotListener","get","callbackId","delete","removeAllListeners","forEach","clear","compositeFilter","buildFirebaseQueryCompositeFilterConstraint","queryConstraints","buildFirebaseQueryNonFilterConstraints","buildFirebaseQueryConstraints","buildFirebaseQueryFilterConstraints","type","queryfilterConstraints","firebaseQueryFilterConstraints","queryfilterConstraint","firebaseQueryFilterConstraint","buildFirebaseQueryFilterConstraint","push","queryFilterConstraints","buildFirebaseQueryFieldFilterConstraint","fieldPath","opStr","value","firebaseQueryNonFilterConstraints","queryConstraint","firebaseQueryNonFilterConstraint","buildFirebaseQueryNonFilterConstraint","directionStr","firebaseQueryConstraints","firebaseQueryConstraint","buildFirebaseQueryConstraint"],"sourceRoot":"webpack:///"}